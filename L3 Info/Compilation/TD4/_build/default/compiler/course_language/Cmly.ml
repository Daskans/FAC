(* Generated by: ocaml-crunch
   Creation date: Thu, 3 Apr 2025 16:55:30 GMT *)

module Internal = struct
  let d_8f2339ec4e1bbe16f57188ca8d859e9c = "CMLY20240715\132\149\166\190\000\000\014\218\000\000\003z\000\000\012u\000\000\011\195\b\000\000,\000?compiler/course_language/Parser\160.\n    open Ast\n@@\b\000\000\180\000\192%error\002\241\024\003\168@@\192%WHILE\002\002\\&<@@\192#VAR\002\002\\&<@@\192$THEN\002\002\\&<@@\192#SUB\002\002\\&<@@\192&STRING\002\002\\&<\144&string@\192$SIZE\002\002\\&<@@\192)SEMICOLON\002\002\\&<@@\192(R_SQ_BRK\002\002\\&<@@\192%R_PAR\002\002\\&<@@\192)R_CUR_BRK\002\002\\&<@@\192&RETURN\002\002\\&<@@\192%PRINT\002\002\\&<@@\192\"OR\002\002\\&<@@\192(NULL_TYP\002\002\\&<@@\192#NOT\002\002\\&<@@\192#NEQ\002\002\\&<@@\192#MUL\002\002\\&<@@\192#MOD\002\002\\&<@@\192(L_SQ_BRK\002\002\\&<@@\192%L_PAR\002\002\\&<@@\192)L_CUR_BRK\002\002\\&<@@\192\"LT\002\002\\&<@@\192#LEQ\002\002\\&<@@\192'INT_TYP\002\002\\&<@@\192#INT\002\002\\&<\144#int@\192\"IF\002\002\\&<@@\192\"ID\002\002\\&<\144&string@\192\"GT\002\002\\&<@@\192#GEQ\002\002\\&<@@\192)FLOAT_TYP\002\002\\&<@@\192%FLOAT\002\002\\&<\144%float@\192\"EQ\002\002\\&<@@\192#EOF\002\0004\160\156@@\192$ELSE\002\002\\&<@@\192#DOT\002\002\\&<@@\192#DIV\002\002\\&<@@\192#DEF\002\002\\&<@@\192%COMMA\002\002\\&<@@\192(BOOL_TYP\002\002\\&<@@\192$BOOL\002\002\\&<\144$bool@\192&ASSIGN\002\002\\&<@@\192#AND\002\002\\&<@@\192#ADD\002\002\\&<@@\192!#\002\244\171w~@@\208\b\000\000 \000%main'\002\001\249\172B%main'@@@\160a\160Z\160Y\160G@@\b\000\000 \000$main\002\002\\&<$main\144%Ast.t\160\160\192\t#compiler/course_language/Parser.mlyu\001\002q\001\002q\192\004\002u\001\002q\001\002u@@\160a\160Z\160Y\160G@@\b\000\000 \000+instruction\002\002\\&<+instruction\144/Ast.instruction\160\160\192\004\014~\001\0059\001\0059\192\004\015~\001\0059\001\005D@@\160G@@\b\000\000 \000-function_list\002\002\\&<-function_list\1446Ast.function_decl list\160\160\192\004\024z\001\003\231\001\003\231\192\004\025z\001\003\231\001\003\244@A\160Z@@\b\000\000 \000*expression\002\002\\&<*expression\144(Ast.expr\160\160\192\004\"\000A\001\005x\001\005x\192\004#\000A\001\005x\001\005\130@@\160Y@@\b\000\000 \000\224\002\001\249\172B@\144\176\145A @\160\160\004-\004+@@@\224\002\002\\&<D\144\176\144Y!i@\160\160\192\0044\000B\001\005\132\001\005\134\192\0045\000B\001\005\132\001\005\141@\144\160\t\141let _endpos = _endpos_i_ in\nlet _startpos = _startpos_i_ in\nlet _loc = (_startpos, _endpos) in\n          ( Cst_i (i,Annotation.create _loc) )\160\176\144\004\011AA\160\176\144\004\014BA@@\224\002\002\\&<C\128\160\160\192\004B{\001\003\246\001\003\247\004\001@\144\160'   ([])@@\224\002\002\\&<C\b\000\000\172\000\176\144Z\"_1@\176\144C\"_2@\176\144b\"_3@\176\144A\"_4@\176\144T\"_5@\176\144I\"_6@\176\144U\"_7@\176\144J\"_8@\176\144S\"_9@\176\144H#_10@\176\144k#_11@\176\144D#_12@\176\144Q#_13@\176\144d#_14@\176\144R#_15@\176\144j#_16@\176\144M#_17@\176\144O#_18@\176\144`#_19@\176\144P#_20@\176\144V#_21@\176\144\\#_22@\176\144W#_23@\176\144]#_24@\176\144f#_25@\176\144G#_26@\176\144i#_27@\176\144e#_28@\176\144c#_29@\176\144L#_30@\176\144F#_31@\176\144K#_32@\176\144X#_33@\176\144^#_34@\176\144g#_35@\176\144N#_36@\176\144B#_37@\176\144[#_38@\176\144E#_39@\176\144Y#_40@\176\144_#_41@\176\144h#_42@\176\144a#_43@\160\160\192\004\203|\001\003\254\001\004\000\192\004\204|\001\003\254\001\004\238@\144\160\n\000\000\0019                                                                                                                                                                                                                                                 ( (*\195\128 retirer -- ici pour \195\169viter les warnings avant de commencer*) [])@@\224\002\002\\&<B\144\176\144G\"_1@\160\160\192\004\215\127\001\005F\001\005H\192\004\216\127\001\005F\001\005Q@\144\160\t\145let _endpos = _endpos__1_ in\nlet _startpos = _startpos__1_ in\nlet _loc = (_startpos, _endpos) in\n            (Block ([],Annotation.create _loc) )\160\176\144\004\011AA\160\176\144\004\014BA@@\224\002\002\\&<A\160\176\145C!l@\176\144a\"_2@\160\160\192\004\236v\001\002w\001\002y\192\004\237v\001\002w\001\002\142@\144\160\n\000\000\001                         ( Program (List.rev l) (*Le List.rev est l\195\160 si vous construisez la liste \195\160 l\226\128\153envers (ce qui arrive si vous le faites avec une associativit\195\169 \195\160 gauche (si vous voulez que l\226\128\153arbre reste petit)). Si vous la construisez dans le bon sens, retirez le List.rev.*))@@\224\002\002\\&<A\160\176\145B!i@\176\144a\"_2@\160\160\192\004\251w\001\003\152\001\003\154\192\004\252w\001\003\152\001\003\173@\144\160\t'                      ( Instruction i )@@\224\002\002\\&<A\160\176\145D!e@\176\144a\"_2@\160\160\192\005\001\nx\001\003\192\001\003\194\192\005\001\011x\001\003\192\001\003\212@\144\160\t%                     ( Expression e )@@\b\000\000\212\000\160@\160\160@@@\160\144\144G\160\160DA@\160\144\144Y\160\160AA@\160\144\144Z\160\160CA@\160\144\144C\160\160CB@\160\144\144b\160\160CC@\160\144\144A\160\160CD@\160\144\144T\160\160CE@\160\144\144I\160\160CF@\160\144\144U\160\160CG@\160\144\144J\160\160CH@\160\144\144S\160\160CI@\160\144\144H\160\160CJ@\160\144\144k\160\160CK@\160\144\144D\160\160CL@\160\144\144Q\160\160CM@\160\144\144d\160\160CN@\160\144\144R\160\160CO@\160\144\144j\160\160CP@\160\144\144M\160\160CQ@\160\144\144O\160\160CR@\160\144\144`\160\160CS@\160\144\144P\160\160CT@\160\144\144V\160\160CU@\160\144\144\\\160\160CV@\160\144\144W\160\160CW@\160\144\144]\160\160CX@\160\144\144f\160\160CY@\160\144\144G\160\160CZ@\160\144\144i\160\160C[@\160\144\144e\160\160C\\@\160\144\144c\160\160C]@\160\144\144L\160\160C^@\160\144\144F\160\160C_@\160\144\144K\160\160C`@\160\144\144X\160\160Ca@\160\144\144^\160\160Cb@\160\144\144g\160\160Cc@\160\144\144N\160\160Cd@\160\144\144B\160\160Ce@\160\144\144[\160\160Cf@\160\144\144E\160\160Cg@\160\144\144Y\160\160Ch@\160\144\144_\160\160Ci@\160\144\144h\160\160Cj@\160\144\144a\160\160Ck@\160\144\145A\160\160@A@\160\144\145B\160\160FA@\160\144\144a\160\160FB@\160\144\145C\160\160EA@\160\144\144a\160\160EB@\160\144\145D\160\160GA@\160\144\144a\160\160GB@\b\000\000\212\000\192@\160\160\144GA\160\160\144YB\160\160\144ZC\160\160\145An\160\160\145Bo\160\160\145Cq\160\160\145Ds@\160\160aB@@\192A@\160\160aD@\144D\192B@\160\160aA@\144A\192C\160\160\144CD@@@\192D\160\160\144bE@@@\192E\160\160\144AF@@@\192F\160\160\144TG@@@\192G\160\160\144IH@@@\192H\160\160\144UI@@@\192I\160\160\144JJ@@@\192J\160\160\144SK@@@\192K\160\160\144HL@@@\192L\160\160\144kM@@@\192M\160\160\144DN@@@\192N\160\160\144QO@@@\192O\160\160\144dP@@@\192P\160\160\144RQ@@@\192Q\160\160\144jR@@@\192R\160\160\144MS@@@\192S\160\160\144OT@@@\192T\160\160\144`U@@@\192U\160\160\144PV@@@\192V\160\160\144VW@@@\192W\160\160\144\\X@@@\192X\160\160\144WY@@@\192Y\160\160\144]Z@@@\192Z\160\160\144f[@@@\192[\160\160\144G\\@@@\192\\\160\160\144i]@@@\192]\160\160\144e^@@@\192^\160\160\144c_@@@\192_\160\160\144L`@@@\192`\160\160\144Fa@@@\192a\160\160\144Kb@@@\192b\160\160\144Xc@@@\192c\160\160\144^d@@@\192d\160\160\144ge@@@\192e\160\160\144Nf@@@\192f\160\160\144Bg@@@\192g\160\160\144[h@@@\192h\160\160\144Ei@@@\192i\160\160\144Yj@@@\192j\160\160\144_k@@@\192k\160\160\144hl@@@\192l\160\160\144am@@@\192m@\160\160aC@\144C\192n@\160\160l@@\144@\192o\160\160\144ap@@@\192p@\160\160lF@\144F\192q\160\160\144ar@@@\192r@\160\160lE@\144E\192s\160\160\144at@@@\192t@\160\160lG@\144G\160\176A@@@@@"

  let file_chunks = function
    | "Parser.cmly" | "/Parser.cmly" -> Some [ d_8f2339ec4e1bbe16f57188ca8d859e9c; ]
    | _ -> None

  let file_list = [ "Parser.cmly"; ]
end

let file_list = Internal.file_list

let read name =
  match Internal.file_chunks name with
  | None -> None
  | Some c -> Some (String.concat "" c)

let hash = function
  | "Parser.cmly" | "/Parser.cmly" -> Some "8f2339ec4e1bbe16f57188ca8d859e9c"
  | _ -> None

let size = function
  | "Parser.cmly" | "/Parser.cmly" -> Some 3834
  | _ -> None
